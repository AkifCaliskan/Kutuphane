

@{
    Layout = "_adminLayout";

}


@using Kutuphane.WebUI.Models.Book;
@model BookAddModel
<div class="content">

    @using (Html.BeginForm("Add", "Book", FormMethod.Post))
    {
        <head>
            <link href="sumoselect.css" rel="stylesheet">


            <style>
                h2 {
                    text-align: center;
                    color: tomato;
                }

                .field-validation-error {
                    color: #E80C4D;
                    font-size: 0.9em;
                }

                .field-validation-valid {
                    display: none;
                    font-size: 0.9em;
                }

                input.input-validation-error {
                    border: 1px solid #E80C4D;
                    font-size: 0.9em;
                }

                input[type="checkbox"].input-validation-error {
                    border: 0 none;
                    font-size: 0.9em;
                }

                .validation-summary-errors {
                    color: #E80C4D;
                    font-weight: bold;
                    font-size: 0.9em;
                }

                .validation-summary-valid {
                    display: none;
                }

                /*a {
                    border: none;
                    padding: 1.1em 6.5em;
                    color: #000000;
                    font-family: 'TitilliumText22LRegular', Arial, sans-serif;
                    font-weight: bold;
                    font-size: 1.1em;
                    border-radius: 0px;
                    text-align : center;
                    width: 30%;
                }

                button {
                    border: none;
                    padding: 1.1em 6.5em;
                    color: #000000;
                    font-family: 'TitilliumText22LRegular', Arial, sans-serif;
                    font-weight: bold;
                    font-size: 1.1em;
                    border-radius: 0px;
                    text-align: center;
                    width: 30%;
                }*/
            </style>
        </head>
        <h2>Kitap Ekleme</h2>
        <div class="container mt-5">

            <div class="row">
                <div class="col-md-1">
                    <label>Kitap Adı: </label>
                </div>
                <div class="col-md-4">
                    @Html.TextBoxFor(x => x.BookName, new { id = "txtBookName", @class = "form-control", placeholder = "Kitap Adı Giriniz", @maxlength = "250" })
                    @Html.ValidationMessageFor(x => x.BookName)
                </div>
                <div class="col-md-1">
                    <label>Yazar Adı: </label>
                </div>
                <div class="col-md-4">
                    @Html.DropDownListFor(x => x.AuthorId, ViewBag.AuthorId as List<SelectListItem>, new { id = "ddlAuthor", @class = "form-control", placeholder = "Seçiniz" })
                    @Html.ValidationMessageFor(x => x.AuthorId, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-1">
                    <label> Açıklama: </label>
                </div>
                <div class="col-md-4">
                    @Html.TextAreaFor(x => x.Description, 6, 40, null)
                    @Html.ValidationMessageFor(x => x.Description)
                </div>
                <div class="col-md-5">
                    <div class="row">
                        <div class="col-md-3">
                            <label>Seri No: </label>
                        </div>
                        <div class="col-md-9">
                            @Html.TextBoxFor(x => x.SerialNumber, new { id = "txtBookSerialNumber", @class = "form-control " , placeholder = "Seri No Giriniz"})
                            @Html.ValidationMessageFor(x => x.SerialNumber, "", new { @class = "text-danger" })
                            <br />
                        </div>
                    </div>
                    <div class="row">
                        <br />
                        <div class="col-md-3 ">
                            <label>Sayfa Sayısı:</label>
                        </div>
                        <div class="col-md-9 ">
                            @Html.TextBoxFor(x => x.PageCount, new { id = "bookPageCount", @class = "form-control", placeholder = "Sayfa Sayısını Giriniz" , onkeypress = "return isNumber(event)" })
                            @Html.ValidationMessageFor(x => x.PageCount, "", new { @class = "text-danger" })
                            <br />
                        </div>
                    </div>
                    <div class="row">
                        <br />
                        <div class="col-md-3 ">
                            <label>Basım Yılı:</label>
                        </div>
                        <div class="col-md-9">
                            @Html.TextBoxFor(x => x.PublicationYear, new { id = "bookPublicYear", @class = "form-control", placeholder = "Basım Yılını Giriniz", @maxlength = "4", onkeypress = "return isNumber(event)" })
                            @Html.ValidationMessageFor(x => x.PublicationYear, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-1">
                    <label>Kategori: </label>
                </div>
                <div class="col-md-4">
                    @Html.DropDownListFor(x => x.CategoryId, ViewBag.CategoryId as List<SelectListItem>, new { id = "ddlCategory", @class = "form-control Select 2 ", placeholder = "Seçiniz" })
                    @Html.ValidationMessageFor(x => x.CategoryId, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-1">
                    <label>Yayın Yılı:</label>
                </div>
                <div class="col-md-4">
                    @Html.TextBoxFor(x => x.YayinYili, new { id = "bookPublicYear", @class = "form-control", placeholder = "Yayın Yılını Giriniz", @maxlength = "4", onkeypress = "return isNumber(event)" })
                    @Html.ValidationMessageFor(x => x.YayinYili, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-8"> </div>
                <div class="col col-md-4">
                    <a class="btn btn-info" role="button" href="/Book/Index ">Geri Dön</a>
                    <button type="submit" class="btn btn-success" OnClick="openPopupAwe()">Kaydet</button>

                </div>
            </div>
        </div>

        @*</div>*@
    }




    @*<form method="post" action="/Book/Upload" enctype="multipart/form-data">
            <input type="file" name="pic" /><br />
            <input type="text" name="fullname" /> <br />
            <input type="submit" value="Kaydet" />
            <a class="btn btn-primary" style="margin-left:1400px;" href="/Book/Index" role="button">Link</a>

        </form>*@
    <!--<div class="container">
        <div class="row">
            <div class="col-md-1">
                <label>Fotoğraf</label>
            </div>
            <div class="col-md-4 imgUp">
                <div class="imagePreview"></div>
                <label class="btn btn-primary">
                    Upload<input id="myImg" name="pic" type="file" class="uploadFile img" value="Upload Photo" style="width: 0px;height: 0px;overflow: hidden;" accept=".jpg">
                    <input type="file" name="pic"/>

                    <form method="post" asp-action="Upload" asp-controller="Home" enctype="multipart/form-data"></form>
                </label>
            </div>-->
    <!-- col-2 -->
    <!--<div class="col-md-4">
        <input type="submit" value="Fotoğrafı Ekle" />
    </div>-->
    @*</div>
        </div>*@


</div>

<script>
    //Sadece digit(Numeric) karakter giriş izni
    function isNumber(evt) {
        evt = (evt) ? evt : window.event;
        var charCode = (evt.which) ? evt.which : evt.keyCode;
        if (charCode > 31 && (charCode < 48 || charCode > 57)) {
            return false;
        }
        return true;
    }
</script>

@*<script>
    function openPopupAwe() {
        awe.open("popupAwe",
            {
                setCont: function (sp, o) {
                    //console.log(utils.getParams(sp));

                    var cont = $('<div style="padding: 0 3em;">Are you sure you want to perform this action?</div>');
                    o.scon.html(cont);
                },
                btns: [
                    {
                        text: 'Yes',
                        ok: 1, // add okbtn class
                        action: function () {
                            $(this).data('api').close();
                        }
                    },
                    {
                        text: 'No',
                        action: function () {
                            $(this).data('api').close();
                        }
                    }],
                height: 200,
                width: 700,
                title: 'please confirm',
                modal: true,
                //params: { p: 123 }
                //top: true,
                //close: function() { console.log('popup closed'); },
                //url: '@Url.Action("Popup1")', // works if setCont and content not set
                //content: 'hello world'
                //outClickClose: true,
                //popupClass: 'class1',
                //fullscreen: true
            });
    }
</script>*@



